apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: import-flow-flogo-ems
  title: Import flow for Flogo projects with EMS
  description: Import existing Flogo projects into TIBCO Developer Hub
  annotations:
    backstage.io/techdocs-ref: dir:.
  tags:
    - import-flow
    - tibco
    - template
    - developer-hub
  lifecycle:
    - production
    - development
    - deprecated
    - test
spec:
  owner: user:default/michel.leijdekker
  type: import-flow

  parameters:
    - title: Repository Location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: GitHub repository with Existing Flogo Project
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

    - title: Fill in some steps
      required:
        - application
        - owner
      properties:
        lifecycle:
          title: lifecycle
          type: string
          description: Asset lifecycle stage
        application_folder:
          title: Flogo Application Folder
          type: string
          description: Folder of Flogo Application to import
        application:
          title: Flogo Application
          type: string
          description: Name of the Flogo Application to import
        owner:
          title: Owner
          type: string
          description: Owner of the template
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
  # MLE: added user
              - User

  # The import flow consist out of 4 steps:
  # 1. Fetch the project from GitHub
  # 2. Generate the Component YAML
  # 3. Commit the Component YAML file back to the GitHub project branch creating a pull request
  # 4. Register the Component in the catalog

  steps:
    - id: fetch
      name: Fetch Flogo project 
      action: fetch:plain
      input:
        url: ${{ "https://"  + (parameters.repoUrl | parseRepoUrl).host + "/" + (parameters.repoUrl | parseRepoUrl).owner + "/" +  (parameters.repoUrl | parseRepoUrl).repo }}

    - id: extract
      name: Extract Parameters
      action: tibco:extract-parameters
      input:
        failOnError: true
        extractParameters:
          flogo_project_name:
            type: json
            filePath: ${{ parameters.application_folder + "/" + parameters.application }}
            jsonPath: $.name
          flogo_project_description:
            type: json
            filePath: ${{ parameters.application_folder + "/" + parameters.application }}
            jsonPath: $.description
          flogo_ems_queue_receivers:
            type: json
            filePath: ${{ parameters.application_folder + "/" + parameters.application }}
            jsonPath: "$.triggers[?(@.ref == '#receivemessage')].handlers[?(@.settings.destinationType == 'Queue')].settings.destination"
          flogo_ems_queue_senders:
            type: json
            filePath: ${{ parameters.application_folder + "/" + parameters.application }}
            jsonPath: "$.resources[*].data.tasks[?(@.activity.ref == '#sendmessage' && @.activity.settings.destinationType == 'Queue' )].activity.settings.settingDestination"
          flogo_task_ids:
            type: json
            filePath: ${{ parameters.application_folder + "/" + parameters.application }}
            jsonPath: "$.resources[*].data.tasks[*].id"
          flogo_tasks:
            type: json
            filePath: ${{ parameters.application_folder + "/" + parameters.application }}
            jsonPath: "$.resources[*].data.tasks[*]"
    
    # The import flow debug step, enable it for debugging
    - id: log-debug
      name: Debug Logs
      action: debug:log
      input:
        message: "Fetched the Flogo Skeleton template"
        listWorkspace: true
        flogo_project_name: ${{ steps.extract.output.flogo_project_name[0] }}
        flogo_project_description: ${{ steps.extract.output.flogo_project_description[0] }}
        repoUrl: ${{ parameters.repoUrl }}
        flogo_ems_queue_receivers: ${{ steps.extract.output.flogo_ems_queue_receivers }}
        flogo_ems_queue_senders: ${{ steps.extract.output.flogo_ems_queue_senders }}
        flogo_task_ids: ${{ steps.extract.output.flogo_task_ids }}
        flogo_tasks: ${{ steps.extract.output.flogo_tasks }}

    - id: fetchRS
      name: Resource Skeleton
      action: fetch:template
      input:
        url: https://github.com/MLEIJDEK/flogo/blob/main/nunjucks/
        targetPath: ${{ parameters.application_folder }}
        templateFileExtension: true
        values:
          flogo_project_name: ${{ steps.extract.output.flogo_project_name[0] }}
          flogo_project_description: ${{ steps.extract.output.flogo_project_description[0] }}
          repoUrl: ${{ parameters.repoUrl }}
          flogo_ems_queue_receivers: ${{ steps.extract.output.flogo_ems_queue_receivers }}
          flogo_ems_queue_senders: ${{ steps.extract.output.flogo_ems_queue_senders }}
          flogo_task_ids: ${{ steps.extract.output.flogo_task_ids }}
          flogo_tasks: ${{ steps.extract.output.flogo_tasks }}
          owner: ${{ parameters.owner }}


    # Rename files
    - id: rename
      name: Rename Descriptor Files
      action: fs:rename
      input:
        files:
          - from: ${{ parameters.application_folder + "/component.yaml" }}
            to: ${{ parameters.application_folder + "/component-" + parameters.application + ".yaml" }}
            overwrite: true
          - from:  ${{ parameters.application_folder + "/resources.yaml" }}
            to: ${{ parameters.application_folder + "/resources-" + parameters.application + ".yaml" }}
            overwrite: true

    - id: cpr
      name: Create Pull Request in Current Repo
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        update: true
        branchName: ${{ parameters.application }}
        title: ${{ parameters.application }}
        description: This PR adds a Component YAML file to this Repository.

    - id: registerComponent
      name: Register Component
      action: catalog:register
      input:
        optional: true
        #                    https://github.com/TIBCO-Hub-Backstage/import-poc-code-hugo/blob/consume-EMS_Message.flogo/FlogoApp/component-consume-EMS_Message.flogo.yaml
        catalogInfoUrl: ${{ "https://"  + (parameters.repoUrl | parseRepoUrl).host + "/" + (parameters.repoUrl | parseRepoUrl).owner + "/" +  (parameters.repoUrl | parseRepoUrl).repo + "/blob/" + parameters.application + '/' + parameters.application_folder + "/component-" + parameters.application + ".yaml" }}

    - id: registerResources
      name: Register Resources
      if: ${{ (steps.extract.output.flogo_ems_queue_receivers.length > 0) or (steps.extract.output.flogo_ems_queue_senders.length > 0) }}
      action: catalog:register
      input:
        optional: true
        catalogInfoUrl: ${{ "https://"  + (parameters.repoUrl | parseRepoUrl).host + "/" + (parameters.repoUrl | parseRepoUrl).owner + "/" +  (parameters.repoUrl | parseRepoUrl).repo + "/blob/" + parameters.application + '/' + parameters.application_folder + "/resources-" + parameters.application + ".yaml" }}

  output:
    links:
      - title: Open in catalog (Component)
        icon: catalog
        entityRef: ${{ steps.registerComponent.output.entityRef }}
      - title: Open in catalog (Resources)
        icon: catalog
        entityRef: ${{ steps.registerResources.output.entityRef }}
      - title: Repository (Pull Request)
        url: ${{ steps.cpr.output.remoteUrl }}
